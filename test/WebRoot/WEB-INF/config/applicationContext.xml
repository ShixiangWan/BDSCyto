<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:task="http://www.springframework.org/schema/task"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-4.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                     http://www.springframework.org/schema/task
    				 http://www.springframework.org/schema/task/spring-task-4.0.xsd">
    <context:annotation-config/>
    <task:annotation-driven />
    <!-- 自动扫描工具类 -->
    <context:component-scan base-package="com.test.dao.impl"/>
    <!-- 自动扫描服务类 -->
    <context:component-scan base-package="com.test.service"/>
    
    
    <!-- 定义数据库连接池数据源bean destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/> 
		<property name="url" value="jdbc:mysql://localhost:3306/bdsc" />
		<property name="username"><value>root</value></property>
		<property name="password" value="root" />
		<!-- 配置监控stat，防SQL注入攻击wall -->
		<property name="filters"><value>wall,stat</value></property>

		<property name="maxActive"><value>20</value></property>
		<property name="initialSize"><value>1</value></property>
		<property name="maxWait"><value>60000</value></property>
		<property name="minIdle"><value>1</value></property>

		<property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
		<property name="minEvictableIdleTimeMillis"><value>300000</value></property>

		<property name="validationQuery"><value>SELECT 'x'</value></property>
		<property name="testWhileIdle"><value>true</value></property>
		<property name="testOnBorrow"><value>false</value></property>
		<property name="testOnReturn"><value>false</value></property>

		<property name="poolPreparedStatements"><value>true</value></property>
		<property name="maxOpenPreparedStatements"><value>20</value></property>
	</bean>

    
    <!-- 配置sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <value>
                <!-- 设置数据库方言 -->
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                hibernate.hbm2ddl.auto=update
                <!-- 是否在控制台显示sql -->
                hibernate.show_sql=true
                <!-- 是否格式化sql，优化显示 -->
                hibernate.format_sql=true
                <!-- 是否开启二级缓存 -->
                hibernate.cache.use_second_level_cache=false
                <!-- 是否开启查询缓存 -->
                hibernate.cache.use_query_cache=false
                <!-- 数据库批量查询最大数 -->
                hibernate.jdbc.fetch_size=50
                <!-- 数据库批量更新、添加、删除操作最大数 -->
                hibernate.jdbc.batch_size=50
                <!-- 是否自动提交事务 -->
                hibernate.connection.autocommit=true
                <!-- 指定hibernate在何时释放JDBC连接 -->
                hibernate.connection.release_mode=auto
                <!-- 创建session的方式 hibernate4.x ，spring4默认已设置 -->
               <!--  hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext -->
                <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包 
                    所以把它设置为none即可 -->
                javax.persistence.validation.mode=none
            </value>
        </property>
        <!-- 自动扫描实体对象的包结构中存放实体类 -->
        <property name="packagesToScan" value="com.test.entity" />
    </bean>
    
    <!-- 配置一个事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
       <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>
    
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="txManager"/>
    
</beans>